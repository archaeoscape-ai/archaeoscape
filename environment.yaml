# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: archaeoscape

channels:
  - pytorch
  - nvidia
  - conda-forge
  - defaults

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  #ML
  - python=3.11
  - pytorch=2.
  - pytorch-cuda=11.8  # comment this out if using cpuonly
  # - cpuonly          # uncomment if you want a cpu-only installation
  - torchvision=0.16
  - lightning=2.1
  - torchmetrics=1.2
  - timm=0.9
  - numpy=1.26
  - scikit-learn=1.3
  - scikit-image=0.22.*
  - tabulate=0.9
  - einops=0.7
  #other
  - hydra-core=1.3
  - rich=13.7
  - pre-commit=3.*
  - pytest=7.*
  # raster
  - pandas=2.1
  - geopandas=0.14.*
  - opencv=4.7
  - rasterio=1.3
  - affine=2.4
  - shapely=2.0
  # other
  - docopt

  # --------- loggers --------- #
  - wandb
  # - neptune-client
  # - mlflow
  # - comet-ml
  # - aim>=3.16.2 # no lower than 3.16.2, see https://github.com/aimhubio/aim/issues/2550
  - tensorboardX

  - pip>=23
  - pip:
      - hydra-optuna-sweeper
      - hydra-colorlog
      - rootutils
      - triangle
